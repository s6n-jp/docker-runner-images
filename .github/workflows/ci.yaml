name: docker

on:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build:
    runs-on: [self-hosted, Linux, ARM64]
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        os:
          - ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        run: echo "${{ github.token }}" | docker login ghcr.io -u $ --password-stdin

      - name: Get shorter hash of the commit
        id: shorter_hash
        run: echo "hash=$(echo ${GITHUB_SHA} | cut -c1-7)" >> ${GITHUB_OUTPUT}

      - run: ls -al

      - name: Build and push (minimal)
        uses: docker/build-push-action@v4
        with:
          push: true
          context: '.'
          file: './${{ matrix.os }}/minimal/Dockerfile'
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
          tags: |
            ghcr.io/s6n-jp/docker-runner-images:${{ matrix.os }}-minimal-${{ steps.shorter_hash.outputs.hash }}
            ghcr.io/s6n-jp/docker-runner-images:${{ matrix.os }}-minimal-${{ github.event.release.tag_name || 'latest' }}
            ghcr.io/s6n-jp/docker-runner-images:${{ matrix.os }}-minimal

      - name: Build and push (standard)
        uses: docker/build-push-action@v4
        with:
          push: true
          context: '.'
          file: './${{ matrix.os }}/standard/Dockerfile'
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
          tags: |
            ghcr.io/s6n-jp/docker-runner-images:${{ matrix.os }}-standard-${{ steps.shorter_hash.outputs.hash }}
            ghcr.io/s6n-jp/docker-runner-images:${{ matrix.os }}-standard-${{ github.event.release.tag_name || 'latest' }}
            ghcr.io/s6n-jp/docker-runner-images:${{ matrix.os }}-standard
